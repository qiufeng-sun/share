// Code generated by protoc-gen-go.
// source: info.proto
// DO NOT EDIT!

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	info.proto
	msg.proto
	user.proto

It has these top-level messages:
	UserInfo
	BattleUser
	Card
	SCSysBusy
	SCKick
	CSLogin
	SCLogin
	CSLoadInfo
	SCLoadInfo
	CSMatchDz
	SCMatchDz
	SCDealDz
	CSBidDz
	SCBidDz
	SCExtraCardsDz
	CSDiscardDz
	SCDiscardDz
	SCGameOverDz
	CSQuitAutoDz
	SCAutoDz
	SCFullDataDz
	LoadUserReq
	LoadUserResp
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 花色
type CardMark int32

const (
	CardMark_CM_Spades   CardMark = 1
	CardMark_CM_Hearts   CardMark = 2
	CardMark_CM_Clubs    CardMark = 3
	CardMark_CM_Diamonds CardMark = 4
)

var CardMark_name = map[int32]string{
	1: "CM_Spades",
	2: "CM_Hearts",
	3: "CM_Clubs",
	4: "CM_Diamonds",
}
var CardMark_value = map[string]int32{
	"CM_Spades":   1,
	"CM_Hearts":   2,
	"CM_Clubs":    3,
	"CM_Diamonds": 4,
}

func (x CardMark) Enum() *CardMark {
	p := new(CardMark)
	*p = x
	return p
}
func (x CardMark) String() string {
	return proto.EnumName(CardMark_name, int32(x))
}
func (x *CardMark) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardMark_value, data, "CardMark")
	if err != nil {
		return err
	}
	*x = CardMark(value)
	return nil
}
func (CardMark) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

//
type UserInfo struct {
	UserId           *int64  `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
	UserName         *string `protobuf:"bytes,2,req,name=userName" json:"userName,omitempty"`
	IconUrl          *string `protobuf:"bytes,3,req,name=iconUrl" json:"iconUrl,omitempty"`
	Gold             *int64  `protobuf:"varint,4,opt,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserInfo) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UserInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *UserInfo) GetIconUrl() string {
	if m != nil && m.IconUrl != nil {
		return *m.IconUrl
	}
	return ""
}

func (m *UserInfo) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

//
type BattleUser struct {
	UserId           *int64  `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
	UserName         *string `protobuf:"bytes,2,req,name=userName" json:"userName,omitempty"`
	IconUrl          *string `protobuf:"bytes,3,req,name=iconUrl" json:"iconUrl,omitempty"`
	Gold             *int64  `protobuf:"varint,4,opt,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BattleUser) Reset()                    { *m = BattleUser{} }
func (m *BattleUser) String() string            { return proto.CompactTextString(m) }
func (*BattleUser) ProtoMessage()               {}
func (*BattleUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BattleUser) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *BattleUser) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *BattleUser) GetIconUrl() string {
	if m != nil && m.IconUrl != nil {
		return *m.IconUrl
	}
	return ""
}

func (m *BattleUser) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

//
type Card struct {
	Mark             *int32 `protobuf:"varint,1,req,name=mark" json:"mark,omitempty"`
	Number           *int32 `protobuf:"varint,2,req,name=number" json:"number,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Card) GetMark() int32 {
	if m != nil && m.Mark != nil {
		return *m.Mark
	}
	return 0
}

func (m *Card) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "msg.UserInfo")
	proto.RegisterType((*BattleUser)(nil), "msg.BattleUser")
	proto.RegisterType((*Card)(nil), "msg.Card")
	proto.RegisterEnum("msg.CardMark", CardMark_name, CardMark_value)
}

func init() { proto.RegisterFile("info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x8d, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x46, 0x69, 0xd3, 0xd1, 0xce, 0x55, 0x31, 0xdc, 0x85, 0x04, 0x57, 0x65, 0x56, 0xc5, 0x85,
	0x0b, 0x1f, 0xc1, 0x08, 0xea, 0x22, 0x2e, 0x22, 0xb3, 0x2e, 0x19, 0x93, 0x19, 0x8a, 0xf9, 0x19,
	0x92, 0xf4, 0xfd, 0x25, 0xa1, 0xfa, 0x08, 0xee, 0xce, 0xe1, 0xbb, 0x97, 0x03, 0x30, 0xfb, 0x63,
	0x78, 0x3c, 0xc7, 0x90, 0x03, 0x12, 0x97, 0x4e, 0x3b, 0x0b, 0xfd, 0x3e, 0x99, 0xf8, 0xee, 0x8f,
	0x01, 0xef, 0xe0, 0x62, 0x29, 0xac, 0x59, 0x33, 0xb4, 0x23, 0x91, 0xab, 0xe1, 0x3d, 0xf4, 0x85,
	0x3e, 0x94, 0x33, 0xac, 0x1d, 0xda, 0x71, 0x2b, 0xff, 0x1c, 0x19, 0x5c, 0xce, 0x5f, 0xc1, 0xef,
	0xa3, 0x65, 0xa4, 0x4e, 0xbf, 0x8a, 0x08, 0xdd, 0x29, 0x58, 0xcd, 0xba, 0xa1, 0x19, 0x89, 0xac,
	0xbc, 0xf3, 0x00, 0xcf, 0x2a, 0x67, 0x6b, 0x4a, 0xf3, 0x1f, 0x7a, 0x4f, 0xd0, 0x71, 0x15, 0x75,
	0xd9, 0x9c, 0x8a, 0xdf, 0xb5, 0xb3, 0x91, 0x95, 0x4b, 0xdd, 0x2f, 0xee, 0x60, 0x62, 0x6d, 0x6c,
	0xe4, 0x6a, 0x0f, 0xaf, 0xd0, 0x97, 0x1f, 0x51, 0x6e, 0x6e, 0x60, 0xcb, 0xc5, 0xf4, 0x79, 0x56,
	0xda, 0x24, 0xda, 0xac, 0xfa, 0x66, 0x54, 0xcc, 0x89, 0xb6, 0x78, 0x0d, 0x3d, 0x17, 0x13, 0xb7,
	0xcb, 0x21, 0x51, 0x82, 0xb7, 0x70, 0xc5, 0xc5, 0xf4, 0x32, 0x2b, 0x17, 0xbc, 0x4e, 0xb4, 0xfb,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x46, 0x0b, 0x22, 0x57, 0x6c, 0x01, 0x00, 0x00,
}
